name: my_FTP CI
on: [push]
jobs:
  coding-style:
    name: Coding style check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get banana script
        run: curl https://raw.githubusercontent.com/Epitech/coding-style-checker/main/coding-style.sh -o /tmp/coding-style.sh; chmod +x /tmp/coding-style.sh
      - name: Run coding-style.sh
        run: /tmp/coding-style.sh . .
      - name: Display banana report
        run: cat coding-style-reports.log
      - name: Report banana result
        run: |
          NB_ERROR=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
              ERRORS=$(cat coding-style-reports.log);
              echo "Banana found $NB_ERROR error(s)"
              echo "$ERRORS"
              if [ $NB_ERROR -gt 1 ]; then
                  echo "Too many errors, please fix them before submitting your work"
                  exit 1
              fi
              exit 0
          fi
          echo "Everything is good ! Keep on coding !"
          exit 0

  compilation:
    name: Compilation via Makefile
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Compile with Make
      run: make re
    - name: Clean build
      run: make fclean

  test_commands:
    name: Test the number of commands implemented
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: './docker-compose.yml'

  tests:
    name: Unit tests and coverage
    runs-on: ubuntu-latest
    needs: compilation
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Compile tests
      run: make tests_run
    - name: Clean build
      run: make fclean

  push_to_epitech_repo:
    name: Push to Epitech repository
    runs-on: ubuntu-latest
    needs: [compilation, test_commands]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url:
          git@github.com:EpitechPromo2026/B-NWP-400-BDX-4-1-myftp-alexis.faure.git
        ssh_private_key:
          ${{ secrets.SSH_PRIVATE_KEY }}
